package mavery.projecteuler;

public class Problem12
{

	/**
	 * The sequence of triangle numbers is generated by adding the natural
	 * numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 =
	 * 28. The first ten terms would be:
	 * 
	 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
	 * 
	 * Let us list the factors of the first seven triangle numbers: 1: 1 3: 1,3
	 * 6: 1,2,3,6 10: 1,2,5,10 15: 1,3,5,15 21: 1,3,7,21 28: 1,2,4,7,14,28
	 * 
	 * We can see that 28 is the first triangle number to have over five
	 * divisors.
	 * 
	 * What is the value of the first triangle number to have over five hundred
	 * divisors?
	 */
	public static void main(String[] args)
	{
		int triangle = 0;
		for (int i = 1; true; i++)
		{
			triangle += i;
			if (factorsGreaterThan(triangle, 500))
			{
				System.out.println(triangle);
				System.exit(0);
			}
		}

	}

	public static boolean factorsGreaterThan(int input, int limit)
	{
		int count = 0;
		
		int inputSqrt = (int) Math.sqrt(input);
		if (inputSqrt * inputSqrt == input)
		{
			count = 1;
		}
		for (int i = 1; i <= inputSqrt; i++)
		{
			if (input % i == 0)
			{
				count++;
			}
			if (count > (limit / 2))
			{
				return true;
			}
		}
		return false;
	}

}
